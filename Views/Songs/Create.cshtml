@model MoodPlaylistGenerator.ViewModels.CreateSongViewModel
@{
    ViewBag.Title = "Add New Song";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h2 class="card-title mb-0"><i class="fas fa-plus"></i> Add New Song</h2>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <div class="mb-3">
                            <label asp-for="Title" class="form-label">Song Title *</label>
                            <input asp-for="Title" type="text" class="form-control" placeholder="Enter song title" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Artist" class="form-label">Artist *</label>
                            <input asp-for="Artist" type="text" class="form-control" placeholder="Enter artist name" />
                            <span asp-validation-for="Artist" class="text-danger"></span>
                        </div>

                        <!-- Media Source Selection -->
                        <div class="mb-4">
                            <label class="form-label">Media Source *</label>
                            <div class="btn-group d-flex" role="group" aria-label="Media source selection">
                                <input type="radio" class="btn-check" name="MediaSource" id="youtube-source" value="youtube" 
                                       @(Model.MediaSource == "youtube" ? "checked" : "") />
                                <label class="btn btn-outline-primary" for="youtube-source">
                                    <i class="fab fa-youtube"></i> YouTube URL
                                </label>
                                
                                <input type="radio" class="btn-check" name="MediaSource" id="upload-source" value="upload" 
                                       @(Model.MediaSource == "upload" ? "checked" : "") />
                                <label class="btn btn-outline-success" for="upload-source">
                                    <i class="fas fa-upload"></i> Upload File
                                </label>
                            </div>
                        </div>

                        <!-- YouTube URL Section -->
                        <div id="youtube-section" class="mb-3" style="display: @(Model.MediaSource == "youtube" ? "block" : "none");">
                            <label asp-for="YouTubeUrl" class="form-label">YouTube URL</label>
                            <input asp-for="YouTubeUrl" type="url" class="form-control" placeholder="https://www.youtube.com/watch?v=..." />
                            <span asp-validation-for="YouTubeUrl" class="text-danger"></span>
                            <div class="form-text">
                                Paste the YouTube URL for this song. Both youtube.com and youtu.be links are supported.
                            </div>
                        </div>

                        <!-- File Upload Section -->
                        <div id="upload-section" class="mb-3" style="display: @(Model.MediaSource == "upload" ? "block" : "none");">
                            <label asp-for="MediaFile" class="form-label">Upload Media File</label>
                            <input asp-for="MediaFile" type="file" class="form-control" 
                                   accept="@(Model.UploadConstraints.HasValue ? string.Join(",", Model.UploadConstraints.Value.VideoExtensions.Concat(Model.UploadConstraints.Value.AudioExtensions)) : "")" />
                            <span asp-validation-for="MediaFile" class="text-danger"></span>
                            <div class="form-text">
                                @if (Model.UploadConstraints.HasValue)
                                {
                                    var constraints = Model.UploadConstraints.Value;
                                    <strong>Supported formats:</strong><br>
                                    <strong>Video:</strong> @string.Join(", ", constraints.VideoExtensions)<br>
                                    <strong>Audio:</strong> @string.Join(", ", constraints.AudioExtensions)<br>
                                    <strong>Max file size:</strong> @(constraints.MaxSizeBytes / 1024 / 1024)<text> MB</text>
                                }
                            </div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Select Moods</label>
                            <div class="form-text mb-2">Choose one or more moods that match this song.</div>
                            <div class="row">
                                @for (int i = 0; i < Model.AvailableMoods.Count; i++)
                                {
                                    var mood = Model.AvailableMoods[i];
                                    <div class="col-md-6 col-lg-4 mb-2">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" 
                                                   name="SelectedMoodIds" value="@mood.Id" id="mood@(mood.Id)"
                                                   @(Model.SelectedMoodIds.Contains(mood.Id) ? "checked" : "") />
                                            <label class="form-check-label" for="mood@(mood.Id)" style="color: @mood.Color;">
                                                <strong>@mood.Name</strong>
                                                <br><small class="text-muted">@mood.Description</small>
                                            </label>
                                        </div>
                                    </div>
                                }
                            </div>
                            <span asp-validation-for="SelectedMoodIds" class="text-danger"></span>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a asp-action="Index" class="btn btn-secondary me-md-2">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Add Song
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card mt-4">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-lightbulb"></i> Tips</h6>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled mb-0">
                        <li><i class="fas fa-check text-success me-2"></i> Make sure the YouTube URL is accessible</li>
                        <li><i class="fas fa-check text-success me-2"></i> Select moods that best represent the song's vibe</li>
                        <li><i class="fas fa-check text-success me-2"></i> You can edit song details later if needed</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // Handle media source switching
    document.addEventListener('DOMContentLoaded', function() {
        const youtubeRadio = document.getElementById('youtube-source');
        const uploadRadio = document.getElementById('upload-source');
        const youtubeSection = document.getElementById('youtube-section');
        const uploadSection = document.getElementById('upload-section');

        function toggleSections() {
            if (youtubeRadio.checked) {
                youtubeSection.style.display = 'block';
                uploadSection.style.display = 'none';
            } else if (uploadRadio.checked) {
                youtubeSection.style.display = 'none';
                uploadSection.style.display = 'block';
            }
        }

        youtubeRadio.addEventListener('change', toggleSections);
        uploadRadio.addEventListener('change', toggleSections);
        
        // Initialize on page load
        toggleSections();
    });
</script>
