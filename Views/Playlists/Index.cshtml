@model MoodPlaylistGenerator.ViewModels.PlaylistListViewModel
@{
    ViewData["Title"] = "My Playlists";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>ðŸŽ§ My Playlists</h2>
    <a href="@Url.Action("Generate")" class="btn btn-primary">
        <i class="fas fa-magic"></i> Generate New Playlist
    </a>
</div>

<!-- Filter by Mood -->
@if (Model.Moods.Any())
{
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3 align-items-center">
                <div class="col-auto">
                    <label class="form-label mb-0">Filter by Mood:</label>
                </div>
                <div class="col-md-4">
                    <select class="form-select" name="moodId" onchange="this.form.submit()">
                        <option value="">All Moods</option>
                        @foreach (var mood in Model.Moods)
                        {
                            <option value="@mood.Id" selected="@(Model.FilterMoodId == mood.Id)"
                                    style="color: @mood.Color;">
                                @mood.Name
                            </option>
                        }
                    </select>
                </div>
                @if (Model.FilterMoodId.HasValue)
                {
                    <div class="col-auto">
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">Clear Filter</a>
                    </div>
                }
            </form>
        </div>
    </div>
}

<!-- Playlists List -->
@if (Model.Playlists.Any())
{
    <div class="row">
        @foreach (var playlist in Model.Playlists)
        {
            <div class="col-md-6 col-lg-4 mb-4">
                <div class="card h-100">
                    <div class="card-body d-flex flex-column">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h5 class="card-title mb-0">@playlist.Name</h5>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" 
                                        data-bs-toggle="dropdown">
                                    <i class="fas fa-ellipsis-v"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a class="dropdown-item" href="@Url.Action("Details", new { id = playlist.Id })">
                                        <i class="fas fa-eye"></i> View Details
                                    </a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form method="post" action="@Url.Action("Delete", new { id = playlist.Id })" 
                                              style="display: inline;" 
                                              onsubmit="return confirm('Are you sure you want to delete this playlist?');">
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <span class="badge rounded-pill me-2" 
                                  style="background-color: @playlist.Mood?.Color; color: white;">
                                @playlist.Mood?.Name
                            </span>
                        </div>
                        
                        <div class="mb-3">
                            <small class="text-muted">
                                <i class="fas fa-music"></i> @playlist.PlaylistSongs.Count songs
                            </small>
                        </div>
                        
                        <div class="mt-auto">
                            <small class="text-muted">
                                Generated @playlist.GeneratedAt.ToString("MMM dd, yyyy 'at' h:mm tt")
                            </small>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent">
                        <a href="@Url.Action("Details", new { id = playlist.Id })" class="btn btn-primary btn-sm w-100">
                            <i class="fas fa-play"></i> View Playlist
                        </a>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Statistics -->
    <div class="mt-4">
        <p class="text-muted">Showing @Model.Playlists.Count playlists</p>
    </div>
}
else
{
    <div class="text-center py-5">
        <div class="mb-4">
            <i class="fas fa-list-music fa-3x text-muted"></i>
        </div>
        <h4>No playlists found</h4>
        @if (Model.FilterMoodId.HasValue)
        {
            <p class="text-muted">No playlists found for the selected mood.</p>
            <a href="@Url.Action("Index")" class="btn btn-outline-secondary me-2">Clear Filter</a>
            <a href="@Url.Action("Generate")" class="btn btn-primary">Generate Playlist</a>
        }
        else
        {
            <p class="text-muted">Start creating your mood-based playlists!</p>
            <a href="@Url.Action("Generate")" class="btn btn-primary">Generate Your First Playlist</a>
        }
    </div>
}
