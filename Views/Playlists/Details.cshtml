@model MoodPlaylistGenerator.ViewModels.PlaylistDetailViewModel
@{
    ViewBag.Title = Model.Playlist.Name;
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2><i class="fas fa-list-music"></i> @Model.Playlist.Name</h2>
                    <p class="text-muted mb-0">
                        <span class="badge" style="background-color: @(Model.Playlist.Mood?.Color ?? "#6c757d");">
                            @(Model.Playlist.Mood?.Name ?? "Mixed")
                        </span>
                        Generated on @Model.Playlist.GeneratedAt.ToString("MMMM dd, yyyy 'at' h:mm tt")
                    </p>
                </div>
                <div>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Playlists
                    </a>
                    <a asp-action="Generate" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Generate New
                    </a>
                </div>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="row">
                <div class="col-lg-8">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <i class="fas fa-music"></i> Songs (@Model.Songs.Count)
                            </h5>
                            @if (Model.CanEdit)
                            {
                                <button class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#editNameModal">
                                    <i class="fas fa-edit"></i> Edit Name
                                </button>
                            }
                        </div>
                        <div class="card-body p-0">
                            @if (Model.Songs.Any())
                            {
                                <div class="list-group list-group-flush">
                                    @foreach (var playlistSong in Model.Songs)
                                    {
                                        <div class="list-group-item">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div class="flex-grow-1">
                                                    <div class="d-flex align-items-center">
                                                        <span class="badge bg-secondary me-3">@playlistSong.Position</span>
                                                        <div>
                                                            <h6 class="mb-0">@playlistSong.Song.Title</h6>
                                                            <small class="text-muted">by @playlistSong.Song.Artist</small>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="d-flex align-items-center">
                                                    @foreach (var songMood in playlistSong.Song.SongMoods)
                                                    {
                                                        <span class="badge me-1" style="background-color: @songMood.Mood.Color; font-size: 0.7em;">
                                                            @songMood.Mood.Name
                                                        </span>
                                                    }
                                                    <a href="@playlistSong.Song.YouTubeUrl" target="_blank" class="btn btn-sm btn-outline-primary ms-2">
                                                        <i class="fab fa-youtube"></i> Play
                                                    </a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-4">
                                    <i class="fas fa-music fa-2x text-muted mb-3"></i>
                                    <p class="text-muted">No songs in this playlist.</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 mt-4 mt-lg-0">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="mb-0"><i class="fas fa-info-circle"></i> Playlist Info</h6>
                        </div>
                        <div class="card-body">
                            <dl class="row mb-0">
                                <dt class="col-sm-4">Mood:</dt>
                                <dd class="col-sm-8">
                                    <span class="badge" style="background-color: @(Model.Playlist.Mood?.Color ?? "#6c757d");">
                                        @(Model.Playlist.Mood?.Name ?? "Mixed")
                                    </span>
                                </dd>

                                <dt class="col-sm-4">Songs:</dt>
                                <dd class="col-sm-8">@Model.Songs.Count</dd>

                                <dt class="col-sm-4">Created:</dt>
                                <dd class="col-sm-8">@Model.Playlist.GeneratedAt.ToString("MMM dd, yyyy")</dd>
                            </dl>
                        </div>
                        <div class="card-footer">
                            <form asp-action="Delete" asp-route-id="@Model.Playlist.Id" method="post" class="d-grid">
                                <button type="submit" class="btn btn-outline-danger" 
                                        onclick="return confirm('Are you sure you want to delete this playlist?')">
                                    <i class="fas fa-trash"></i> Delete Playlist
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.CanEdit)
{
    <!-- Edit Name Modal -->
    <div class="modal fade" id="editNameModal" tabindex="-1" aria-labelledby="editNameModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form asp-action="UpdateName" method="post">
                    <input type="hidden" name="PlaylistId" value="@Model.Playlist.Id" />
                    <div class="modal-header">
                        <h5 class="modal-title" id="editNameModalLabel">Edit Playlist Name</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="Name" class="form-label">Playlist Name</label>
                            <input type="text" class="form-control" name="Name" value="@Model.Playlist.Name" required maxlength="100" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}